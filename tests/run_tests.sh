EXE_DIR=..
EXE=count-matrix-conv

echo "Building ${EXE}"
make -C ${EXE_DIR} all 1>/dev/null
if [ $? -ne 0 ]
then
	echo -e "\e[91mCompilation failed! :-(\033[0m"
	exit 1
fi
echo -e "Done!\n"

function convert
{
	input_file=$1
	output_file=$2

	${EXE_DIR}/${EXE} -i ${input_file} -o ${output_file} 1 >/dev/null
	if [ $? -ne 0 ]
	then
		echo -e "\e[91mConversion failed! :-(\033[0m"
		exit 1
	fi
	echo -e "Done!\n"
}

for ascii_count_matrix in `ls *.txt`
do
	count_matrix=`basename ${ascii_count_matrix} .txt`

	bin_count_matrix="${count_matrix}.bin"
	echo "Converting ${ascii_count_matrix} to binary"
	convert ${ascii_count_matrix} ${bin_count_matrix}

	ascii_count_matrix_generated="${count_matrix}_2.txt"
	echo "Converting ${bin_count_matrix} to ascii"
	convert ${bin_count_matrix} ${ascii_count_matrix_generated}

	md5sum_original=`md5sum ${ascii_count_matrix} | cut -f1 -d ' '`
	md5sum_generated=`md5sum ${ascii_count_matrix_generated} | cut -f1 -d ' '`

	if [ ${md5sum_original} =  ${md5sum_generated} ]
	then
		echo "Original count matrix and the one generated by the conversion toolchain are equal!"
		echo -e "\e[92mTest passed:! :-)\033[0m"
	else
		echo "Original count matrix and the one generated by the conversion toolchain are different!"
		echo -e "\e[91mTest failed! :-(\033[0m"
		exit 1 
	fi

	rm ${ascii_count_matrix_generated} ${bin_count_matrix}
done
